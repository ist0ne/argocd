{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion) .Values.defaultRules.create .Values.defaultRules.rules.thanos }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ printf "%s-%s" (include "kube-prometheus-stack.fullname" .) "thanos-recording.rules" | trunc 63 | trimSuffix "-" }}
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}
{{ include "kube-prometheus-stack.labels" . | indent 4 }}
{{- if .Values.defaultRules.labels }}
{{ toYaml .Values.defaultRules.labels | indent 4 }}
{{- end }}
{{- if .Values.defaultRules.annotations }}
  annotations:
{{ toYaml .Values.defaultRules.annotations | indent 4 }}
{{- end }}
spec:
  groups:
  - name: thanos-query.rules
    rules:
    - expr: |
        (
          sum by (job) (rate(grpc_client_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-query", grpc_type="unary"}[5m]))
        /
          sum by (job) (rate(grpc_client_started_total{job=~".*-query", grpc_type="unary"}[5m]))
        )
      record: :grpc_client_failures_per_unary:sum_rate
    - expr: |
        (
          sum by (job) (rate(grpc_client_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-query", grpc_type="server_stream"}[5m]))
        /
          sum by (job) (rate(grpc_client_started_total{job=~".*-query", grpc_type="server_stream"}[5m]))
        )
      record: :grpc_client_failures_per_stream:sum_rate
    - expr: |
        (
          sum by (job) (rate(thanos_query_store_apis_dns_failures_total{job=~".*-query"}[5m]))
        /
          sum by (job) (rate(thanos_query_store_apis_dns_lookups_total{job=~".*-query"}[5m]))
        )
      record: :thanos_query_store_apis_dns_failures_per_lookup:sum_rate
    - expr: |
        histogram_quantile(0.99,
          sum by (job, le) (rate(http_request_duration_seconds_bucket{job=~".*-query", handler="query"}[5m]))
        )
      labels:
        quantile: "0.99"
      record: :query_duration_seconds:histogram_quantile
    - expr: |
        histogram_quantile(0.99,
          sum by (job, le) (rate(http_request_duration_seconds_bucket{job=~".*-query", handler="query_range"}[5m]))
        )
      labels:
        quantile: "0.99"
      record: :api_range_query_duration_seconds:histogram_quantile
  - name: thanos-receive.rules
    rules:
    - expr: |
        (
          sum by (job) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-receive", grpc_type="unary"}[5m]))
        /
          sum by (job) (rate(grpc_server_started_total{job=~".*-receive", grpc_type="unary"}[5m]))
        )
      record: :grpc_server_failures_per_unary:sum_rate
    - expr: |
        (
          sum by (job) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-receive", grpc_type="server_stream"}[5m]))
        /
          sum by (job) (rate(grpc_server_started_total{job=~".*-receive", grpc_type="server_stream"}[5m]))
        )
      record: :grpc_server_failures_per_stream:sum_rate
    - expr: |
        (
          sum by (job) (rate(http_requests_total{handler="receive", job=~".*-receive", code!~"5.."}[5m]))
        /
          sum by (job) (rate(http_requests_total{handler="receive", job=~".*-receive"}[5m]))
        )
      record: :http_failure_per_request:sum_rate
    - expr: |
        histogram_quantile(0.99,
          sum by (job, le) (rate(http_request_duration_seconds_bucket{handler="receive", job=~".*-receive"}[5m]))
        )
      labels:
        quantile: "0.99"
      record: :http_request_duration_seconds:histogram_quantile
    - expr: |
        (
          sum by (job) (rate(thanos_receive_replications_total{result="error", job=~".*-receive"}[5m]))
        /
          sum by (job) (rate(thanos_receive_replications_total{job=~".*-receive"}[5m]))
        )
      record: :thanos_receive_replication_failure_per_requests:sum_rate
    - expr: |
        (
          sum by (job) (rate(thanos_receive_forward_requests_total{result="error", job=~".*-receive"}[5m]))
        /
          sum by (job) (rate(thanos_receive_forward_requests_total{job=~".*-receive"}[5m]))
        )
      record: :thanos_receive_forward_failure_per_requests:sum_rate
    - expr: |
        (
          sum by (job) (rate(thanos_receive_hashrings_file_errors_total{job=~".*-receive"}[5m]))
        /
          sum by (job) (rate(thanos_receive_hashrings_file_refreshes_total{job=~".*-receive"}[5m]))
        )
      record: :thanos_receive_hashring_file_failure_per_refresh:sum_rate
  - name: thanos-store.rules
    rules:
    - expr: |
        (
          sum by (job) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-storegateway", grpc_type="unary"}[5m]))
        /
          sum by (job) (rate(grpc_server_started_total{job=~".*-storegateway", grpc_type="unary"}[5m]))
        )
      record: :grpc_server_failures_per_unary:sum_rate
    - expr: |
        (
          sum by (job) (rate(grpc_server_handled_total{grpc_code=~"Unknown|ResourceExhausted|Internal|Unavailable|DataLoss|DeadlineExceeded", job=~".*-storegateway", grpc_type="server_stream"}[5m]))
        /
          sum by (job) (rate(grpc_server_started_total{job=~".*-storegateway", grpc_type="server_stream"}[5m]))
        )
      record: :grpc_server_failures_per_stream:sum_rate
    - expr: |
        (
          sum by (job) (rate(thanos_objstore_bucket_operation_failures_total{job=~".*-storegateway"}[5m]))
        /
          sum by (job) (rate(thanos_objstore_bucket_operations_total{job=~".*-storegateway"}[5m]))
        )
      record: :thanos_objstore_bucket_failures_per_operation:sum_rate
    - expr: |
        histogram_quantile(0.99,
          sum by (job, le) (rate(thanos_objstore_bucket_operation_duration_seconds_bucket{job=~".*-storegateway"}[5m]))
        )
      labels:
        quantile: "0.99"
      record: :thanos_objstore_bucket_operation_duration_seconds:histogram_quantile
{{- end }}
